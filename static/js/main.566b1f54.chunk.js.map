{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","API_URL","getMovie","a","fetch","response","json","FindMovie","props","addMovie","useState","setTitle","setMovie","error","setError","loadMovie","searchMovie","Response","newMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","name","value","onChange","event","target","onClick","disabled","App","data","setMovies","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.566b1f54.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","export const API_URL = 'https://www.omdbapi.com/?apikey=4177f3f1';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie, API_URL } from '../../api/api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n\n  const loadMovie = async () => {\n    const searchMovie = await getMovie(title);\n\n    if (searchMovie.Response === 'False') {\n      setMovie(null);\n      setError(true);\n\n      return;\n    }\n\n    const newMovie = {\n      title: searchMovie.Title,\n      description: searchMovie.Plot,\n      imgUrl: searchMovie.Poster,\n      imdbId: searchMovie.imdbID,\n      imdbUrl: `${API_URL}&t=${searchMovie.Title}`,\n    };\n\n    setMovie(newMovie);\n    setTitle('');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                addMovie(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          movie && <MovieCard {...movie} />\n        }\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie: Movie) => {\n    if (newMovie && !movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}